前情回顾

1. 文件概述
   文件的定义  文件分类
   字节串  encode()  decode()

2. 文件读写
   open() --> read/write --> close()

   r  w  a  +  b

3. 文件操作细节
   缓冲区 ：  flush

   文件偏移量: seek()  tell()

练习1： 编写一个程序，删除主目录下 “下载”
文件夹中大小 小于1kb的文件

正则表达式元字符练习：
1. 匹配出大写字母开头的单词
How are you,Jame.
In [35]: re.findall("[A-Z][a-z]*","How ar
    ...: e you,Jame.")
Out[35]: ['How', 'Jame']

2. 匹配出文字中的数字
小明身高：175cm 体重 70Kg
In [37]: re.findall('[0-9]+',"小明身高：1
    ...: 75cm 体重 70Kg")
Out[37]: ['175', '70']

3. 匹配出文字中的数字
当前海拔： 83米 ，温度： -22度

In [44]: re.findall('-?[0-9]+',"当前海拔
    ...: ： 83米 ，温度： -22度")
Out[44]: ['83', '-22']

4. 匹配国内的手机号码
   13  15   17  18
In [47]: re.findall('1[3578][0-9]{9}',"13
    ...: 838465789")
Out[47]: ['13838465789']

5. 匹配一下日期
2020-12-30
In [53]: re.findall('\d{4}-\d{1,2}-\d{1,2}',"2020-2-12")
Out[53]: ['2020-2-12']


6. 匹配qq号码 （6-11）
In [54]: re.findall('[1-9][0-9]{5,10}',"1
    ...: 23456789")
Out[54]: ['123456789']

7. 匹配大写字母开头单词
Hello , A  boy  iPython  NBA


8. 匹配数字
12  -23  1.56  -4.8

In [81]: re.findall(r'-?\d+\.?\d*',"12  -
    ...: 23  1.56  -4.8")
Out[81]: ['12', '-23', '1.56', '-4.8']

9. 匹配日薪数据
你的日薪： $120
In [83]: re.findall(r'\$\d+',"你的日薪：
    ...: $120")
Out[83]: ['$120']

10. 匹配如下书名连同书名号
《走在2020～～》 《奥特曼 @@ 小怪兽》
《啦啦啦。。。下雪啦》

In [99]: re.findall(r'《.+?》',"《走在202
    ...: 0～～》 《奥特曼 @@ 小怪兽》 《
    ...: 啦啦啦。。。下雪啦》")
Out[99]: ['《走在2020～～》', '《奥特曼 @@ 小怪兽》', '《啦啦啦。。。下雪啦》']

11. 匹配IP地址 192.168.1.5   0-255
In [109]:  re.search(r'(\d{1,3}\.){3}\d{1
     ...: ,3}',"92.18.22.65").group()
Out[109]: '92.18.22.65'

在线网站：https://tool.oschina.net/regex


文件综合训练
根据文件 log.txt完成
文件特征: 每段之间有空行
         每段收个单词是设备名称

要求： 设计程序完成，输入一个设备名称
得到该设备的 address is 值

思路：　*先根据用户输入提取出设备描述段落
　　　　*再从该段中取出目标字符串


作业　：　熟练正则表达式元字符
　　　　　课上练习没写出来的再写一遍


