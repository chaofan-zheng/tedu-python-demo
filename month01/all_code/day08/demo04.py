"""
    函数内存分布
        1. 传入可变数据
        2. (函数)修改可变数据
        3. 不用通过return返回(修改后的)结果
"""


# 1. 将函数代码存入内存代码区,不执行函数体
def func01():
    print("func01")
    a = 10


# 2. 调用函数,在内存中开辟一块空间(栈帧),存储函数内部的变量
func01()


# 3. 当函数执行完毕后,栈帧立即释放
def func02(p1, p2):
    p1 = "no"
    p2[0] = 10

data01 = "ok"
data02 = [100]
func02(data01, data02)
print(data01) # ?
print(data02) # 10