"""
    复习 - Python语言核心(1)
    1. 两种执行方式：
        交互式：打开终端
               输入python3进入交互式模式
               输入代码...
               输入exit()退出交互式模式
        文件式：
            切换工作目录 cd
            运行程序python3 文件名.py

    2. Python语言内存管理机制
       (1)引用计数：
            每个对象记录被变量绑定的数量,当为0时被销毁。
          缺点：
            循环引用
       (2)标记清除：
            全盘扫描内存空间,标记不再使用的数据.
          缺点：
            内存空间太大,全盘扫描耗时费力.
       (3)分代回收：
            将内存空间分为小中大三代,
            也可以理解为"年轻代","中年代","老年代"
            创建新数据永远在"年轻代"存储,
            如果某一代内存告急,会触发标记清除,
            将可用数据升代,释放当前这个代的内存空间,
        (4)学习目标：内存优化
            尽少产生垃圾，使用对象池，配置垃圾回收参数
"""
list01 = []  # 列表引用计数为2
list02 = list01
del list01,list02 # 列表引用计数为0

# 循环引用:两个垃圾相互存储
list03 = []
list04 = []
list03.append(list04)
list04.append(list03)
del list03,list04  # 列表引用计数为1

for i in range(10000):
    print(i)#


# 内置对象池：整数池/小数/字符串池/布尔池
# 每次创建对象时,都先判断池中是否具有相同数据
# 如果有,直接返回对象地址
#    没有,创建新对象
# 优点：节省内存空间(相同的数据不存储多份)
data01 = "悟空"
data02 = "悟空"
print(id(data01))
print(id(data02))